# Cursor Rules for Taostats API Documentation

## Documentation Structure Rules
- All API endpoints are in docs/{category}/{endpoint}.md
- Each category has an index.md describing its endpoints
- Main documentation entry point is docs/index.md
- Authentication guide is in docs/api-key.md

## Command: find endpoint
When the user asks to find an endpoint or API documentation:
1. First check docs/index.md for the category
2. Then check the category's index.md
3. Finally check the specific endpoint documentation

## Command: generate client
When generating API client code:
1. Check endpoint documentation for:
   - Complete parameter list
   - Required vs optional parameters
   - Default values
   - Response structure
2. Include error handling
3. Use the example request as a template
4. Add proper authentication header
5. Follow response standards:
   - Handle pagination
   - Parse timestamps as ISO 8601
   - Treat numerical values as strings
   - Check both SS58 and hex formats for addresses

## Command: check parameters
When verifying API parameters:
1. Check parameter tables for:
   - Required status
   - Type constraints
   - Default values
   - Valid ranges/formats
2. Verify timestamp formats:
   - Some endpoints use Unix timestamps
   - Others use ISO 8601
3. Address formats:
   - SS58 format for Substrate addresses
   - Hex format for EVM addresses
4. Pagination parameters:
   - page (default: 1)
   - limit (default: 50)
   - order ('asc' or 'desc')

## Command: parse response
When parsing API responses:
1. Check response fields table
2. Handle pagination structure:
   ```json
   {
     "pagination": {
       "current_page": 1,
       "per_page": 50,
       "total_items": 100,
       "total_pages": 2,
       "next_page": 2,
       "prev_page": null
     },
     "data": []
   }
   ```
3. Parse numerical values as strings
4. Handle both SS58 and hex address formats
5. Process timestamps according to format

## Command: handle errors
When implementing error handling:
1. Check HTTP status codes
2. Parse error response structure
3. Handle rate limits
4. Implement retries for 5xx errors
5. Check beta status for dTAO endpoints

## Documentation Patterns
1. Subnet endpoints require netuid parameter
2. Historical endpoints support:
   - Block range filtering
   - Timestamp range filtering
3. Address fields provided in both formats:
   - SS58 (Substrate)
   - Hex (EVM)
4. Beta endpoints may have:
   - Additional rate limits
   - Different response formats
   - Potential breaking changes

## Quick References
- Authentication: docs/api-key.md
- API Categories: docs/index.md#api-categories
- Response Standards: docs/index.md#response-standards
- Beta Features: docs/dtao/index.md 